[{"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "4", "inputVector": "", "url": "https://5.iottalk.tw/sitemap.xml", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "0", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "1", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "4", "inputVector": "", "url": "https://5.iottalk.tw/sitemap.xml", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "2", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "6", "inputVector": "", "url": "https://5.iottalk.tw/robots.txt", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "3", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "4", "inputVector": "", "url": "https://5.iottalk.tw/sitemap.xml", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "4", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "6", "inputVector": "", "url": "https://5.iottalk.tw/robots.txt", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "5", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "6", "inputVector": "", "url": "https://5.iottalk.tw/robots.txt", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "6", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "20", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "7", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "17", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "8", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "17", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "9", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "20", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "10", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10015", "cweid": "525", "confidence": "Low", "wascid": "13", "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/", "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".", "alert": "Re-examine Cache-control Directives", "param": "cache-control", "attack": "", "name": "Re-examine Cache-control Directives", "risk": "Informational", "id": "11", "alertRef": "10015"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "12", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "13", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "23", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "14", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "23", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "15", "alertRef": "10035"}, {"sourceid": "3", "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<a href=\"#\" onclick=\"window.open('http://'+location.hostname+':7788/connection', '_blank');\">Project</a>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "16", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "25", "inputVector": "", "url": "https://5.iottalk.tw/static/font.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "17", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "18", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10015", "cweid": "525", "confidence": "Low", "wascid": "13", "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/", "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".", "alert": "Re-examine Cache-control Directives", "param": "cache-control", "attack": "", "name": "Re-examine Cache-control Directives", "risk": "Informational", "id": "19", "alertRef": "10015"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "25", "inputVector": "", "url": "https://5.iottalk.tw/static/font.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "20", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "21", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "22", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "25", "inputVector": "", "url": "https://5.iottalk.tw/static/font.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "23", "alertRef": "10021"}, {"sourceid": "3", "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<a href=\"#\" onclick=\"window.open('http://'+location.hostname+':7788/connection', '_blank');\">Project</a>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "24", "alertRef": "10109"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "7", "inputVector": "", "url": "https://5.iottalk.tw", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "25", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "26", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "27", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "28", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "public, max-age=43200", "pluginId": "10015", "cweid": "525", "confidence": "Low", "wascid": "13", "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/", "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".", "alert": "Re-examine Cache-control Directives", "param": "cache-control", "attack": "", "name": "Re-examine Cache-control Directives", "risk": "Informational", "id": "29", "alertRef": "10015"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "22", "inputVector": "", "url": "https://5.iottalk.tw/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "30", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "31", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "39", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "32", "alertRef": "10036"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script src=\"/da/vp/js/jquery.min.js\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "33", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "41", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "34", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "39", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "35", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "41", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "36", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "37", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "38", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "43", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "39", "alertRef": "10036"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "27", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/web_py_index.html", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "41", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "43", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "42", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "56", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.mousewheel.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "45", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "56", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.mousewheel.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "46", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "56", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.mousewheel.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "47", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "59", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "48", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "60", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "49", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "59", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "50", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "60", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "51", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "59", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "52", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "61", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "53", "alertRef": "10036"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "60", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "54", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "61", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "55", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "61", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "56", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bDB\\b and was detected 2 times, the first in the element starting with: \"!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.docu\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "db", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "58", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSERNAME\\b and was detected in the element starting with: \"},cur:function(){var a=Zb.propHooks[this.prop];return a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var \", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "username", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "59", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "60", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "61", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "62", "alertRef": "10021"}, {"sourceid": "3", "other": "CVE-2020-11023\nCVE-2020-11022\nCVE-2015-9251\nCVE-2019-11358\n", "method": "GET", "evidence": "/*! jQuery v1.11.1", "pluginId": "10003", "cweid": "829", "confidence": "Medium", "wascid": "-1", "description": "The identified library jquery, version 1.11.1 is vulnerable.", "messageId": "58", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery.min.js", "tags": {"CVE-2020-11023": "https://nvd.nist.gov/vuln/detail/CVE-2020-11023", "OWASP_2017_A09": "https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities.html", "CVE-2020-11022": "https://nvd.nist.gov/vuln/detail/CVE-2020-11022", "OWASP_2021_A06": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/", "CVE-2015-9251": "https://nvd.nist.gov/vuln/detail/CVE-2015-9251", "CVE-2019-11358": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358"}, "reference": "https://github.com/jquery/jquery/issues/2432\nhttp://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/\nhttp://research.insecurelabs.org/jquery/test/\nhttps://blog.jquery.com/2019/04/10/jquery-3-4-0-released/\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-11358\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-9251\nhttps://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\nhttps://bugs.jquery.com/ticket/11974\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://github.com/jquery/jquery.com/issues/162\n", "solution": "Please upgrade to the latest version of jquery.", "alert": "Vulnerable JS Library", "param": "", "attack": "", "name": "Vulnerable JS Library", "risk": "Medium", "id": "63", "alertRef": "10003"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected 5 times, the first in the element starting with: \"(function(e){\"function\"==typeof define&&define.amd?define([\"jquery\"],e):e(jQuery)})(function(e){function t(t,s){var n,a,o,r=t.no\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "66", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected in the element starting with: \"if(t.keyCode===e.ui.keyCode.TAB&&!t.isDefaultPrevented()){var i=this.uiDialog.find(\":tabbable\"),s=i.filter(\":first\"),n=i.filter(\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "67", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSER\\b and was detected in the element starting with: \"node.body._scope=bodyScope;bodyScope.name=node.name;bodyScope.cbIndex=cbIndex;bodyScope.line=node.lineno;node.body=_propagate(no\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "user", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "66", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RScompiler.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "68", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected 4 times, the first in the element starting with: \"(function(){})();(function(){\"use strict\";var VPython_import=null;var VPython_names=[];var waitlist=[new RegExp(\"^rate\\\\s*\\\\(\"),\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "66", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RScompiler.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "69", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "70", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "71", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "66", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RScompiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "72", "alertRef": "10036"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSER\\b and was detected in the element starting with: \"node.body._scope=bodyScope;bodyScope.name=node.name;bodyScope.cbIndex=cbIndex;bodyScope.line=node.lineno;node.body=_propagate(no\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "user", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "62", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/compiler.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "73", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected 3 times, the first in the element starting with: \"(function(){})();(function(){\"use strict\";var VPython_import=null;var VPython_names=[];var waitlist=[new RegExp(\"^rate\\\\s*\\\\(\"),\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "62", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/compiler.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "74", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "66", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RScompiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "75", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "76", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "62", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/compiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "77", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "62", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/compiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "78", "alertRef": "10035"}, {"sourceid": "3", "other": "CVE-2021-41184\nCVE-2021-41183\nCVE-2021-41182\nCVE-2022-31160\n", "method": "GET", "evidence": "/*! jQuery UI - v1.11.4", "pluginId": "10003", "cweid": "829", "confidence": "Medium", "wascid": "-1", "description": "The identified library jquery-ui, version 1.11.4 is vulnerable.", "messageId": "73", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/jquery-ui.custom.min.js", "tags": {"CVE-2021-41184": "https://nvd.nist.gov/vuln/detail/CVE-2021-41184", "OWASP_2017_A09": "https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities.html", "CVE-2021-41183": "https://nvd.nist.gov/vuln/detail/CVE-2021-41183", "CVE-2021-41182": "https://nvd.nist.gov/vuln/detail/CVE-2021-41182", "OWASP_2021_A06": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/", "CVE-2022-31160": "https://nvd.nist.gov/vuln/detail/CVE-2022-31160"}, "reference": "https://github.com/advisories/GHSA-h6gj-6jjq-h8g9\nhttps://bugs.jqueryui.com/ticket/15284\nhttps://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31160\nhttps://github.com/jquery/jquery-ui/security/advisories/GHSA-h6gj-6jjq-h8g9\nhttps://github.com/jquery/jquery-ui/security/advisories/GHSA-gpqq-952q-5327\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-41184\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-41183\nhttps://github.com/jquery/jquery-ui/security/advisories/GHSA-9gj3-hwp5-pmwc\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-41182\nhttps://github.com/jquery/jquery-ui/issues/2101\n", "solution": "Please upgrade to the latest version of jquery-ui.", "alert": "Vulnerable JS Library", "param": "", "attack": "", "name": "Vulnerable JS Library", "risk": "Medium", "id": "79", "alertRef": "10003"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "80", "alertRef": "10020-1"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "66", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RScompiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "81", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "82", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "83", "alertRef": "10017"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "84", "alertRef": "10017"}, {"sourceid": "3", "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<a id=\"start\" href=\"#\" class=\"btn btn-success\" style=\"display:none;\">\n\t\t\t    <span class=\"glyphicon glyphicon-play\" style=\"display:none;\"></span></a>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "85", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "86", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "87", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "74", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "88", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "89", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "90", "alertRef": "10038-1"}, {"sourceid": "3", "other": "Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<a class=\"bulb-light\">\n\n      <div id=\"light\"></div>\n     \n      <font size=\"5\" color=\"white\">Registering</font> <br><br>\n      \n      <div id=\"bulb\">\n        <div class=\"bulb-top\">\n          <div class=\"reflection\"></div>\n        </div>\n        <div class=\"bulb-middle-1\"></div>\n        <div class=\"bulb-middle-2\"></div>\n        <div class=\"bulb-middle-3\"></div>\n        <div class=\"bulb-bottom\"></div>\n      </div>\n\n      <div id=\"base\">\n        <div class=\"base-top\"></div>\n        <div class=\"base-spiral\"></div>\n        <div class=\"base-body\"></div>\n        <div class=\"base-spiral\"></div>\n        <div class=\"base-body\"></div>\n        <div class=\"base-spiral\"></div>\n        <div class=\"base-body\"></div>\n        <div class=\"base-bottom\"></div>\n        <div class=\"base-connector\"></div>\n      </div>\n    </a>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "91", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "92", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "93", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "84", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "94", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "95", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "96", "alertRef": "10038-1"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script src=\"include/jquery.min.js\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "97", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "98", "alertRef": "10036"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "62", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/compiler.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "99", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "100", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "92", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "101", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "102", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "103", "alertRef": "10038-1"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script>\n\ndocument.location.href='http://'+location.hostname+'/msg';\n\n</script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "104", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "105", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "106", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "97", "inputVector": "", "url": "https://5.iottalk.tw/da/Message/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "107", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "99", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "108", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "99", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "109", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "99", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "110", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "111", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "112", "alertRef": "10038-1"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script type=\"text/javascript\" src=\"js/jquery-3.1.1.min.js\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "113", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "114", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "115", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "101", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "116", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "105", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "117", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "105", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "118", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "105", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "119", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10020", "cweid": "1021", "confidence": "Medium", "wascid": "15", "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options", "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.", "alert": "Missing Anti-clickjacking Header", "param": "x-frame-options", "attack": "", "name": "Missing Anti-clickjacking Header", "risk": "Medium", "id": "120", "alertRef": "10020-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10038", "cweid": "693", "confidence": "High", "wascid": "15", "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttp://www.w3.org/TR/CSP/\nhttp://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp://caniuse.com/#feat=contentsecuritypolicy\nhttp://content-security-policy.com/", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.", "alert": "Content Security Policy (CSP) Header Not Set", "param": "", "attack": "", "name": "Content Security Policy (CSP) Header Not Set", "risk": "Medium", "id": "121", "alertRef": "10038-1"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "<script defer src=\"https://cdnjs.cloudflare.com/ajax/libs/uuid/8.1.0/uuidv4.min.js\"></script>", "pluginId": "10017", "cweid": "829", "confidence": "Medium", "wascid": "15", "description": "The page includes one or more script files from a third-party domain.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"}, "reference": "", "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.", "alert": "Cross-Domain JavaScript Source File Inclusion", "param": "https://cdnjs.cloudflare.com/ajax/libs/uuid/8.1.0/uuidv4.min.js", "attack": "", "name": "Cross-Domain JavaScript Source File Inclusion", "risk": "Low", "id": "122", "alertRef": "10017"}, {"sourceid": "3", "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.", "method": "GET", "evidence": "<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\" integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>", "pluginId": "10109", "cweid": "-1", "confidence": "Medium", "wascid": "-1", "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {}, "reference": "", "solution": "This is an informational alert and so no changes are required.", "alert": "Modern Web Application", "param": "", "attack": "", "name": "Modern Web Application", "risk": "Informational", "id": "123", "alertRef": "10109"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "124", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "125", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "106", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "126", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bDEBUG\\b and was detected 2 times, the first in the element starting with: \"\t * Show an Debug message both on browser console and on defined DIV\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "Debug", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "115", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/console.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "127", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bWHERE\\b and was detected in the element starting with: \" *            id: id attribute of the DIV tag where to show the messages\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "where", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "115", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/console.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "128", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "115", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/console.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "129", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "115", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/console.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "130", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "115", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/console.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "131", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "107", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/favicon.ico", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "132", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "117", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/index.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "133", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "107", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/favicon.ico", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "134", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "117", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/index.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "135", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "117", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/index.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "136", "alertRef": "10021"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "107", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/favicon.ico", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "137", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "118", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "138", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "118", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "139", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "118", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css/style.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "140", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "121", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "141", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "121", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "142", "alertRef": "10035"}, {"sourceid": "3", "other": "The following pattern was used: \\bADMIN\\b and was detected 2 times, the first in the element starting with: \"\t\tdocument.getElementById(\"address\").value=\"rtsp://admin:jr123456@140.113.215.15:554/cam/realmonitor?channel=1&subtype=0&unicast\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "admin", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "120", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/scripts.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "143", "alertRef": "10027"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "121", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "144", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSERNAME\\b and was detected 2 times, the first in the element starting with: \"let UNAME_IP_CAM = \"an username of the Vivotek camera\";\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "username", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "120", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/scripts.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "145", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "120", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/scripts.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "146", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "120", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/scripts.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "147", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "120", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/scripts.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "148", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "123", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "149", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "123", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "150", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "123", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dan.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "151", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "124", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "152", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "124", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "153", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "124", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/dai.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "154", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "126", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/ida.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "155", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "126", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/ida.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "156", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "126", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/ida.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "157", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bDB\\b and was detected 2 times, the first in the element starting with: \"r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "db", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "158", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected in the element starting with: \"!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "159", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "128", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.knob.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "160", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "128", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.knob.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "161", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "128", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.knob.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "162", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "163", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "164", "alertRef": "10035"}, {"sourceid": "3", "other": "10.47.197.26\n192.168.34.75\n192.168.34.75\n192.168.150.19\n192.168.34.75\n", "method": "GET", "evidence": "10.47.197.26", "pluginId": "2", "cweid": "200", "confidence": "Medium", "wascid": "13", "description": "A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "https://tools.ietf.org/html/rfc1918", "solution": "Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.", "alert": "Private IP Disclosure", "param": "", "attack": "", "name": "Private IP Disclosure", "risk": "Low", "id": "165", "alertRef": "2"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "166", "alertRef": "10021"}, {"sourceid": "3", "other": "CVE-2020-11023\nCVE-2020-11022\nCVE-2019-11358\n", "method": "GET", "evidence": "/*! jQuery v3.1.0", "pluginId": "10003", "cweid": "829", "confidence": "Medium", "wascid": "-1", "description": "The identified library jquery, version 3.1.0 is vulnerable.", "messageId": "125", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js/jquery.js", "tags": {"CVE-2020-11023": "https://nvd.nist.gov/vuln/detail/CVE-2020-11023", "OWASP_2017_A09": "https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities.html", "CVE-2020-11022": "https://nvd.nist.gov/vuln/detail/CVE-2020-11022", "OWASP_2021_A06": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/", "CVE-2019-11358": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358"}, "reference": "https://blog.jquery.com/2019/04/10/jquery-3-4-0-released/\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-11358\nhttps://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\n", "solution": "Please upgrade to the latest version of jquery.", "alert": "Vulnerable JS Library", "param": "", "attack": "", "name": "Vulnerable JS Library", "risk": "Medium", "id": "167", "alertRef": "10003"}, {"sourceid": "3", "other": "The following pattern was used: \\bXXX\\b and was detected in the element starting with: \"                // XXX This might brake if an SSRC is in more than one group\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "XXX", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "168", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bLATER\\b and was detected 4 times, the first in the element starting with: \"    // Unified Plan SDP is our \"precious\". Cache it for later use in the Plan B\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "later", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "169", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bDEBUG\\b and was detected in the element starting with: \"        logger.debug('Remote ICE candidate received', iceCandidate);\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "debug", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "170", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSERNAME\\b and was detected 4 times, the first in the element starting with: \"  output.username = input.username;\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "username", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "171", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected in the element starting with: \"        // inactive, then select this uLine as the channel basis.\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "172", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSER\\b and was detected 2 times, the first in the element starting with: \"        // At least give some kind of context to the user\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "user", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "173", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected 19 times, the first in the element starting with: \"// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "FROM", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "174", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bTODO\\b and was detected 8 times, the first in the element starting with: \"  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "TODO", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "175", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bWHERE\\b and was detected 3 times, the first in the element starting with: \"    , location = session; // points at where properties go under (one of the above)\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "where", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "176", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "177", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "178", "alertRef": "10035"}, {"sourceid": "3", "other": "1845501695, which evaluates to: 2028-06-25 07:21:35", "method": "GET", "evidence": "1845501695", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "179", "alertRef": "10096"}, {"sourceid": "3", "other": "1518280447, which evaluates to: 2018-02-11 00:34:07", "method": "GET", "evidence": "1518280447", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "180", "alertRef": "10096"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "127", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-utils.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "182", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "130", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css/gsensor.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "183", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "130", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css/gsensor.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "184", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "130", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css/gsensor.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "185", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "135", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css/v1.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "186", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "135", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css/v1.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "187", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "135", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css/v1.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "188", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "137", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/compass.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "189", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "137", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/compass.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "190", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "137", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/compass.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "191", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "139", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/arrow.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "192", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "139", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/arrow.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "193", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "139", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images/arrow.svg", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "194", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "140", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "195", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "140", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "196", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "140", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/csmapi.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "197", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bDB\\b and was detected 2 times, the first in the element starting with: \"a.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.set\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "db", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "198", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected in the element starting with: \"!function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "199", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "200", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "201", "alertRef": "10035"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "134", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "202", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "134", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "203", "alertRef": "10035"}, {"sourceid": "3", "other": "The following pattern was used: \\bDB\\b and was detected 2 times, the first in the element starting with: \"!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.docu\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "db", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "204", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSERNAME\\b and was detected in the element starting with: \"},cur:function(){var a=Zb.propHooks[this.prop];return a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var \", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "username", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "205", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "206", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "207", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "208", "alertRef": "10021"}, {"sourceid": "3", "other": "CVE-2020-11023\nCVE-2020-11022\nCVE-2019-11358\n", "method": "GET", "evidence": "jquery-3.1.1.min.js", "pluginId": "10003", "cweid": "829", "confidence": "Medium", "wascid": "-1", "description": "The identified library jquery, version 3.1.1 is vulnerable.", "messageId": "132", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/jquery-3.1.1.min.js", "tags": {"CVE-2020-11023": "https://nvd.nist.gov/vuln/detail/CVE-2020-11023", "OWASP_2017_A09": "https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities.html", "CVE-2020-11022": "https://nvd.nist.gov/vuln/detail/CVE-2020-11022", "OWASP_2021_A06": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/", "CVE-2019-11358": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358"}, "reference": "https://blog.jquery.com/2019/04/10/jquery-3-4-0-released/\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-11358\nhttps://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\n", "solution": "Please upgrade to the latest version of jquery.", "alert": "Vulnerable JS Library", "param": "", "attack": "", "name": "Vulnerable JS Library", "risk": "Medium", "id": "209", "alertRef": "10003"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "134", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/bootstrap.min.css", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "210", "alertRef": "10021"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "211", "alertRef": "10021"}, {"sourceid": "3", "other": "CVE-2020-11023\nCVE-2020-11022\nCVE-2015-9251\nCVE-2019-11358\n", "method": "GET", "evidence": "/*! jQuery v1.11.1", "pluginId": "10003", "cweid": "829", "confidence": "Medium", "wascid": "-1", "description": "The identified library jquery, version 1.11.1 is vulnerable.", "messageId": "142", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include/jquery.min.js", "tags": {"CVE-2020-11023": "https://nvd.nist.gov/vuln/detail/CVE-2020-11023", "OWASP_2017_A09": "https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities.html", "CVE-2020-11022": "https://nvd.nist.gov/vuln/detail/CVE-2020-11022", "OWASP_2021_A06": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/", "CVE-2015-9251": "https://nvd.nist.gov/vuln/detail/CVE-2015-9251", "CVE-2019-11358": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358"}, "reference": "https://github.com/jquery/jquery/issues/2432\nhttp://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/\nhttp://research.insecurelabs.org/jquery/test/\nhttps://blog.jquery.com/2019/04/10/jquery-3-4-0-released/\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-11358\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-9251\nhttps://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\nhttps://bugs.jquery.com/ticket/11974\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://github.com/jquery/jquery.com/issues/162\n", "solution": "Please upgrade to the latest version of jquery.", "alert": "Vulnerable JS Library", "param": "", "attack": "", "name": "Vulnerable JS Library", "risk": "Medium", "id": "212", "alertRef": "10003"}, {"sourceid": "3", "other": "The following pattern was used: \\bFIXME\\b and was detected 3 times, the first in the element starting with: \"    // FIXME: The compass does not point to the right direction on the Android devices.\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "FIXME", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "143", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/main.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "213", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected in the element starting with: \"    alert('Your device does not support getting acceleration info from the browser');\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "143", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/main.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "214", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "143", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/main.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "215", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "143", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/main.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "216", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "143", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js/main.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "217", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bDEBUG\\b and was detected in the element starting with: \"// Export to browser's global for debug\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "debug", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "144", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/iottalk-api.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "218", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "144", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/iottalk-api.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "219", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "144", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/iottalk-api.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "220", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "144", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js/iottalk-api.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "221", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bBUGS\\b and was detected 3 times, the first in the element starting with: \"        curve_peel_depth_vertex: '// Vertex shader for rendering curve segments, parameterized by\\n// pos1, pos2, radius, color\\\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "bugs", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "222", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSER\\b and was detected 7 times, the first in the element starting with: \"        opaque_render_fragment: \"#ifdef GL_ES\\n#  ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#  else\\nprecision m\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "user", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "223", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected in the element starting with: \"        select: function() {\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "224", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected 20 times, the first in the element starting with: \"                        aH = aB[aD].from;\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "225", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "226", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "227", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "145", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/glow.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "228", "alertRef": "10021"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "147", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RSrun.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "229", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "147", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RSrun.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "230", "alertRef": "10035"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "147", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js/RSrun.2.1.min.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "231", "alertRef": "10021"}, {"sourceid": "3", "other": "The following pattern was used: \\bFIXME\\b and was detected in the element starting with: \"var RETRY_TIME_MS = 3000; // FIXME: Implement exponential wait times...\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "FIXME", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "232", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bXXX\\b and was detected 7 times, the first in the element starting with: \"  // XXX This code assumes that zero is always zero in red\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "XXX", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "233", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bLATER\\b and was detected 18 times, the first in the element starting with: \"  // go through the array every three bytes, we'll deal with trailing stuff later\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "later", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "234", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bDB\\b and was detected 19 times, the first in the element starting with: \"  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "db", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "235", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bDEBUG\\b and was detected 266 times, the first in the element starting with: \"        , [ 'module_root', 'build', 'Debug', 'bindings' ]\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "Debug", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "236", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bQUERY\\b and was detected 44 times, the first in the element starting with: \"      ws_uri.query.access_token = access_token;\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "query", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "237", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bSELECT\\b and was detected 6 times, the first in the element starting with: \"  // Select what transactions mechanism to use\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "Select", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "238", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bTODO\\b and was detected 30 times, the first in the element starting with: \"      // TODO(indutny): this should be thrown on DSL level\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "TODO", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "239", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bBUGS\\b and was detected 8 times, the first in the element starting with: \" * to work around bugs in some JS interpreters.\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "bugs", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "240", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bBUG\\b and was detected 11 times, the first in the element starting with: \"// this is a bug in node module loading as far as I am concerned\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "bug", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "241", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSERNAME\\b and was detected 9 times, the first in the element starting with: \" *              <li>rtsp://username:password@<server-ip></li>\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "username", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "242", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bUSER\\b and was detected 75 times, the first in the element starting with: \"      'Transaction rollback by user');\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "user", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "243", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bFROM\\b and was detected 285 times, the first in the element starting with: \"      // Send (implicit) transactions from previous iteration\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "from", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "244", "alertRef": "10027"}, {"sourceid": "3", "other": "The following pattern was used: \\bWHERE\\b and was detected 44 times, the first in the element starting with: \" * It delegate its functionality on the `then()` of the object where it's\", see evidence field for the suspicious comment/snippet.", "method": "GET", "evidence": "where", "pluginId": "10027", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "", "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.", "alert": "Information Disclosure - Suspicious Comments", "param": "", "attack": "", "name": "Information Disclosure - Suspicious Comments", "risk": "Informational", "id": "245", "alertRef": "10027"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "nginx/1.10.3 (Ubuntu)", "pluginId": "10036", "cweid": "200", "confidence": "High", "wascid": "13", "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html", "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"}, "reference": "http://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttp://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007\nhttp://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.", "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "param": "", "attack": "", "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field", "risk": "Low", "id": "246", "alertRef": "10036"}, {"sourceid": "3", "other": "", "method": "GET", "evidence": "", "pluginId": "10035", "cweid": "319", "confidence": "High", "wascid": "15", "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttp://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp://caniuse.com/stricttransportsecurity\nhttp://tools.ietf.org/html/rfc6797", "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.", "alert": "Strict-Transport-Security Header Not Set", "param": "", "attack": "", "name": "Strict-Transport-Security Header Not Set", "risk": "Low", "id": "247", "alertRef": "10035"}, {"sourceid": "3", "other": "1732584193, which evaluates to: 2024-11-26 09:23:13", "method": "GET", "evidence": "1732584193", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "248", "alertRef": "10096"}, {"sourceid": "3", "other": "1732584194, which evaluates to: 2024-11-26 09:23:14", "method": "GET", "evidence": "1732584194", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "249", "alertRef": "10096"}, {"sourceid": "3", "other": "1473231341, which evaluates to: 2016-09-07 14:55:41", "method": "GET", "evidence": "1473231341", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "250", "alertRef": "10096"}, {"sourceid": "3", "other": "1770035416, which evaluates to: 2026-02-02 20:30:16", "method": "GET", "evidence": "1770035416", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "251", "alertRef": "10096"}, {"sourceid": "3", "other": "1958414417, which evaluates to: 2032-01-23 04:00:17", "method": "GET", "evidence": "1958414417", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "252", "alertRef": "10096"}, {"sourceid": "3", "other": "1990404162, which evaluates to: 2033-01-27 10:02:42", "method": "GET", "evidence": "1990404162", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "253", "alertRef": "10096"}, {"sourceid": "3", "other": "1804603682, which evaluates to: 2027-03-09 22:48:02", "method": "GET", "evidence": "1804603682", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "254", "alertRef": "10096"}, {"sourceid": "3", "other": "1502002290, which evaluates to: 2017-08-06 14:51:30", "method": "GET", "evidence": "1502002290", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "255", "alertRef": "10096"}, {"sourceid": "3", "other": "1444681467, which evaluates to: 2015-10-13 04:24:27", "method": "GET", "evidence": "1444681467", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "256", "alertRef": "10096"}, {"sourceid": "3", "other": "1735328473, which evaluates to: 2024-12-28 03:41:13", "method": "GET", "evidence": "1735328473", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "257", "alertRef": "10096"}, {"sourceid": "3", "other": "1926607734, which evaluates to: 2031-01-20 00:48:54", "method": "GET", "evidence": "1926607734", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "258", "alertRef": "10096"}, {"sourceid": "3", "other": "1839030562, which evaluates to: 2028-04-11 09:49:22", "method": "GET", "evidence": "1839030562", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "259", "alertRef": "10096"}, {"sourceid": "3", "other": "1530992060, which evaluates to: 2018-07-08 03:34:20", "method": "GET", "evidence": "1530992060", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "260", "alertRef": "10096"}, {"sourceid": "3", "other": "1416354905, which evaluates to: 2014-11-19 07:55:05", "method": "GET", "evidence": "1416354905", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "261", "alertRef": "10096"}, {"sourceid": "3", "other": "1700485571, which evaluates to: 2023-11-20 21:06:11", "method": "GET", "evidence": "1700485571", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "262", "alertRef": "10096"}, {"sourceid": "3", "other": "1894986606, which evaluates to: 2030-01-19 01:10:06", "method": "GET", "evidence": "1894986606", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "263", "alertRef": "10096"}, {"sourceid": "3", "other": "1873313359, which evaluates to: 2029-05-13 04:49:19", "method": "GET", "evidence": "1873313359", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "264", "alertRef": "10096"}, {"sourceid": "3", "other": "1560198380, which evaluates to: 2019-06-11 04:26:20", "method": "GET", "evidence": "1560198380", "pluginId": "10096", "cweid": "200", "confidence": "Low", "wascid": "13", "description": "A timestamp was disclosed by the application/web server - Unix", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html"}, "reference": "http://projects.webappsec.org/w/page/13246936/Information%20Leakage", "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.", "alert": "Timestamp Disclosure - Unix", "param": "", "attack": "", "name": "Timestamp Disclosure - Unix", "risk": "Low", "id": "265", "alertRef": "10096"}, {"sourceid": "3", "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.", "method": "GET", "evidence": "", "pluginId": "10021", "cweid": "693", "confidence": "Medium", "wascid": "15", "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.", "messageId": "146", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js/kurento-client.js", "tags": {"OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/", "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"}, "reference": "http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx\nhttps://owasp.org/www-community/Security_Headers", "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.", "alert": "X-Content-Type-Options Header Missing", "param": "x-content-type-options", "attack": "", "name": "X-Content-Type-Options Header Missing", "risk": "Low", "id": "266", "alertRef": "10021"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1266", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "267", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1269", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "268", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1279", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "269", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1283", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "270", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1293", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "271", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1297", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "272", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1303", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "273", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1305", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "274", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1307", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "275", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1309", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "276", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1313", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "277", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1317", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "278", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1322", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "279", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1328", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "280", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1330", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "281", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1332", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "282", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1337", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "283", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1340", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "284", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1344", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "285", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1348", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "286", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1350", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "287", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1354", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "288", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1356", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "289", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1359", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "290", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1362", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "291", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1364", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "292", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1366", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "293", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1368", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "294", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1370", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "295", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1373", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "296", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1388", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "297", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1396", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "298", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1402", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "299", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1406", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "300", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1411", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "301", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1416", "inputVector": "", "url": "https://5.iottalk.tw/da/4Ktest/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "302", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1420", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "303", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1425", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "304", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1431", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "305", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1439", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "306", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1447", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "307", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1455", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "308", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1463", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "309", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1469", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "310", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1471", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "311", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1476", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "312", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1480", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "313", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1484", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "314", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1487", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "315", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1493", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "316", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1496", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "317", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1500", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "318", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1503", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "319", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1505", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "320", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1508", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "321", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1511", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "322", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1515", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "323", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1517", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "324", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1523", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "325", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1525", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "326", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1533", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "327", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1534", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "328", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1539", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "329", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1544", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "330", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1551", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "331", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1553", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "332", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1557", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "333", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1559", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "334", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1566", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "335", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1573", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "336", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1580", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "337", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1590", "inputVector": "", "url": "https://5.iottalk.tw/da/Bulb/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "338", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1606", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "339", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1611", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "340", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1616", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "341", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1620", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "342", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1623", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "343", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1625", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "344", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1630", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "345", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1633", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "346", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1636", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "347", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1642", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "348", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1644", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "349", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1646", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "350", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1651", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "351", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1653", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "352", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1655", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "353", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1661", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "354", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1663", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "355", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1665", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "356", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1669", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "357", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1672", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "358", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1673", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "359", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1675", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "360", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1678", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "361", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1680", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "362", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1683", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "363", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1688", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "364", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1691", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "365", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1694", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "366", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1698", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "367", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1701", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "368", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1706", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "369", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1710", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "370", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1714", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "371", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1718", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "372", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1719", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "373", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1721", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "374", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1724", "inputVector": "", "url": "https://5.iottalk.tw/da/GPS/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "375", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1728", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "376", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1735", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "377", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1737", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "378", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1744", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "379", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1747", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "380", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1750", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "381", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1754", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "382", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1757", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "383", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1762", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "384", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1767", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "385", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1770", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "386", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1775", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "387", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1777", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "388", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1780", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "389", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1783", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "390", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1786", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "391", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1790", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "392", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1793", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "393", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1795", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "394", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1797", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "395", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1799", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "396", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1801", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "397", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1803", "inputVector": "", "url": "https://5.iottalk.tw/da/Message", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "398", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1805", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "399", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1809", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "400", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1812", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "401", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1822", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "402", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1827", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "403", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1830", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "404", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1832", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "405", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1836", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "406", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1841", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "407", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1846", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "408", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1850", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "409", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1853", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "410", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1856", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "411", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1860", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "412", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1864", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "413", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1869", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "414", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1872", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "415", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1874", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "416", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1876", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "417", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1878", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "418", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1880", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "419", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1884", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "420", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1887", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "421", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1892", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "422", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1896", "inputVector": "", "url": "https://5.iottalk.tw/da/RandNum/include", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "423", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1901", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "424", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1907", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "425", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1912", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "426", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1918", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "427", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1919", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "428", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1922", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "429", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1924", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "430", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1930", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "431", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1932", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "432", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1946", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "433", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1948", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "434", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1954", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "435", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1958", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "436", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1960", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "437", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1964", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "438", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1966", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "439", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1969", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "440", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1973", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "441", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1975", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "442", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1978", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "443", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1982", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "444", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1984", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "445", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1987", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/css", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "446", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1993", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "447", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "1995", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "448", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2003", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "449", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2006", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "450", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2011", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "451", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2014", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "452", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2017", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "453", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2020", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/images", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "454", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2023", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "455", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2025", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "456", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2028", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "457", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2030", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "458", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2032", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "459", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2034", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "460", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2036", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "461", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2038", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "462", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2040", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "463", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2042", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "464", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2044", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "465", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2046", "inputVector": "", "url": "https://5.iottalk.tw/da/Smartphone/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "466", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2048", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "467", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2050", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "468", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2052", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "469", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2054", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "470", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2056", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "471", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2058", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "472", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2060", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "473", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2062", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "474", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2064", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "475", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2066", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "476", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2069", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "477", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2072", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "478", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2074", "inputVector": "", "url": "https://5.iottalk.tw/da/vp", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "479", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2079", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "480", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2084", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "481", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2090", "inputVector": "", "url": "https://5.iottalk.tw/da/vp/js", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "482", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2231", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "483", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2234", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "484", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2236", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "485", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2238", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko", "name": "User Agent Fuzzer", "risk": "Informational", "id": "486", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2240", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3739.0 Safari/537.36 Edg/75.0.109.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "487", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2242", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "488", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2244", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "msnbot/1.1 (+http://search.msn.com/msnbot.htm)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "489", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2246", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)", "name": "User Agent Fuzzer", "risk": "Informational", "id": "490", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2248", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; U; CPU iPhone OS 3_0 like Mac OS X; en-us) AppleWebKit/528.18 (KHTML, like Gecko) Version/4.0 Mobile/7A341 Safari/528.16", "name": "User Agent Fuzzer", "risk": "Informational", "id": "491", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2250", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_0_2 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A366 Safari/600.1.4", "name": "User Agent Fuzzer", "risk": "Informational", "id": "492", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2254", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/91.0", "name": "User Agent Fuzzer", "risk": "Informational", "id": "493", "alertRef": "10104"}, {"sourceid": "1", "other": "", "method": "GET", "evidence": "", "pluginId": "10104", "cweid": "0", "confidence": "Medium", "wascid": "0", "description": "Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.", "messageId": "2257", "inputVector": "", "url": "https://5.iottalk.tw/static", "tags": {}, "reference": "https://owasp.org/wstg", "solution": "", "alert": "User Agent Fuzzer", "param": "Header User-Agent", "attack": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36", "name": "User Agent Fuzzer", "risk": "Informational", "id": "494", "alertRef": "10104"}]